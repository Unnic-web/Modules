import re
from datetime import datetime
from telethon import TelegramClient
from .. import loader, utils

@loader.tds
class PremiumStatusMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ Telegram Premium —á–µ—Ä–µ–∑ @PremiumBot."""

    strings = {
        "name": "PremiumStatus"
    }

    def __init__(self):
        self.name = self.strings["name"]
        self._client = None

    async def client_ready(self, client: TelegramClient, db):
        self._client = client

    async def otcmd(self, message):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ Telegram Premium. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .ot"""
        await message.edit("<b>–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</b>")

        try:
            bot_username = 'PremiumBot'
            async with self._client.conversation(bot_username) as conv:
                start_message = await conv.send_message('/start')
                response = await conv.get_response()
                await start_message.delete()

                if response.message and "—É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π" in response.message:
                    await message.edit("<b>–£ –≤–∞—Å —Ö–∞–ª—è–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, —Å–ø—Ä–æ—Å–∏—Ç–µ —É —Ç–æ–≥–æ, –∫—Ç–æ –≤–∞–º –µ—ë –ø–æ–¥–∞—Ä–∏–ª, —Å–∫–æ–ª—å–∫–æ –µ—â—ë –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å.</b>")
                elif response.message:
                    match = re.search(r'üìÜ –°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç—ë–∂: (.*?), (\d{2}\.\d{2}\.\d{4})\.', response.message)
                    if match:
                        full_date = match.group(2)
                        expiry_date = datetime.strptime(full_date, '%d.%m.%Y')
                        remaining_days = (expiry_date - datetime.now()).days
                        await message.edit(f"<b>–î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è Premium –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å: <code>{remaining_days}</code> –¥–Ω–µ–π.</b>")
                    else:
                        await message.edit("<b>–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.</b>")
                else:
                    await message.edit("<b>–û—à–∏–±–∫–∞: –û—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞ –ø—É—Å—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.</b>")

        except Exception as e:
            await message.edit(f"<b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}</b>")